set-window-option -g mode-keys vi

# vim-like copying
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key 'p' paste

#st of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# set tab color
# setw -g window-status-current-bg colour3
# tmux >=3.3
set-window-option -g window-status-current-style bg=yellow

# text color
set -g status-style fg=black,bg=green

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# save and restore sessions
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# searching sith prefix + ctrl + /
set -g @plugin 'tmux-plugins/tmux-copycat'
   
# default bindings
set -g @plugin 'tmux-plugins/tmux-pain-control'

set -g @tpm_plugins "                 \
  soyuka/tmux-current-pane-hostname     \
"

set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g status-left '#[fg=black,bold] #U@#H #[default]#[fg=blue]#(tmux display-message -p "#{pane_current_path}" | sed "s#$HOME#~#g") #[fg=black]%H:%M %d-%b-%y#[default]'

# enable copy mode via <prefix>1 (`1)
bind 1 copy-mode -e
# Shift + left / right = switch tabs
bind -n S-left  prev
bind -n S-right next
# Shift + ctrl + left / right = swap tabs
bind -n S-C-left swap-window -t -1
bind -n S-C-right swap-window -t +1
# Ctrl + t = new tab
bind -n C-t new-window -a -c "#{pane_current_path}"

# Allow to switch between nested an local tmux session (ssh):
# Shift up / down - move control to nested / local session
# ` - prefix key for selected tmux
# C-b - prefix key for other tmux
set -g prefix `

# S-up, S-down - are always handled by parent (local) session
# M-12, M-11 bindings are used to start/stop handling other keys:
#   S-left, S-right, S-C-left, S-C-right, C-t, C-b

# to see all colors: 
# for i in {0..255}; do  printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n" done

# status-bg = color of satus bar (panel); status-fg = color of TEXT in bar
# colour2 = green (default active panel); colour3 = yellow (active tab); colour4 = blue (inactive panel)
# colour0 = black; colour16 = simple (darker) black; colour15 = simple white; colour7 = white

# Do not put spaces after "\" !

bind -n M-S-F11 set -q status-bg colour4 \; \
    unbind -n S-left \; \
    unbind -n S-right \; \
    unbind -n S-C-left \; \
    unbind -n S-C-right \; \
    unbind -n C-t \; \
    set -q prefix C-b

bind -n M-S-F12 set -q status-bg colour2 \; \
    bind -n S-left  prev \; \
    bind -n S-right next \; \
    bind -n S-C-left swap-window -t -1 \; \
    bind -n S-C-right swap-window -t +1 \; \
    bind -n C-t new-window -a -c "#{pane_current_path}" \; \
    set -q prefix `


bind -n S-up \
        set -q status-bg colour4 \; \
        unbind -n S-left \; \
        unbind -n S-right \; \
        unbind -n S-C-left \; \
        unbind -n S-C-right \; \
        unbind -n C-t \; \
        set -q prefix C-b \; \
        send-keys M-S-F12

bind -n S-down \
        set -q status-bg colour2 \; \
        bind -n S-left  prev \; \
        bind -n S-right next \; \
        bind -n S-C-left swap-window -t -1 \; \
        bind -n S-C-right swap-window -t +1 \; \
        bind -n C-t new-window -a -c "#{pane_current_path}" \; \
        set -q prefix ` \; \
        send-keys M-S-F11

