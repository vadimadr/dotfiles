{
  // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Return": {
    "prefix": "re",
    "body": "return $0"
  },
  "Test (class based)": {
    "prefix": "testm",
    "body": ["def test_$1(self):", "    $2"]
  },
  "Test (free function)": {
    "prefix": "test",
    "body": ["def test_$1():", "    $2"]
  },
  "Add method": {
    "prefix": "defs",
    "body": ["def ${1:mname}(self):", "\t${2:pass}"]
  },
  "Script": {
    "prefix": "!!script",
    "body": [
      "import argparse",
      "from tofa import make_logger",
      "",
      "",
      "logger = make_logger()",
      "",
      "",
      "def main():",
      "\targs = parse_args()",
      "",
      "",
      "def parse_args():",
      "\tparser = argparse.ArgumentParser()",
      "\treturn parser.parse_args()",
      "",
      "",
      "if __name__ == \"__main__\":",
      "\tmain()"
    ]
  },
  "ic install" : {
    "prefix": "icin",
    "body": "from icecream import install; install()",
    "description": "install icecream logging tool"
  },
  "pdbb": {
    "prefix": "pdbb",
    "body": "import pdb; pdb.set_trace()",
    "description": "Set pdb breakpoint",
  }
}
